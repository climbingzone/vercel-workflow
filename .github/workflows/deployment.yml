name: Update Graph

on: deployment_status

jobs:
  # Set the job key. The key is displayed as the job name
  # when a job name is not provided
  update-graph:
    name: Update Apollo Graph
    runs-on: ubuntu-latest
    if: github.event.deployment_status.state == 'success'
    env:
      SERVICE_ENDPOINT: ${{ github.event.deployment_status.target_url }}/api/graphql
      GRAPH: climbingzone-graph
      GATEWAY_PROJECT: vercel
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get deployment environment
        id: deployment_environment
        uses: ASzc/change-string-case-action@v1
        with:
          string: ${{ github.event.deployment.environment }}
      - name: Echo Deployment URL
        run: echo $DEPLOYMENT_URL
      - name: Echo Service
        run: echo $(echo ${SERVICE_ENDPOINT:8} | cut -d'-' -f 1)
      - name: Echo graph variant
        id: graph_variant
        run: echo ${{ steps.deployment_environment.outputs.lowercase }}
      - name: Service conditional
        run: if [  "$(echo ${SERVICE_ENDPOINT:8} | cut -d'-' -f 1)" = "$GATEWAY_PROJECT"  ];then echo "BOO"; fi
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Install Apollo CLI
        run: |
          PROJECT_NAME=echo $(echo ${{ steps.deployment_environment.outputs.lowercase }} | cut -d" " -f 1)
          if [ "$PROJECT_NAME" = "$GATEWAY_PROJECT" ]; then
              echo "Gateway does not require graph update"
          else
            yarn add apollo@^2.30.3 -W
          fi
      - name: Update Apollo Studio Graph
        run: |
          PROJECT_NAME=echo $(echo ${{ steps.deployment_environment.outputs.lowercase }} | cut -d" " -f 1)
          if [ "$PROJECT_NAME" = "$GATEWAY_PROJECT" ]; then
              echo "Gateway does not require graph update"
          else
            VARIANT=echo $(echo ${{ steps.deployment_environment.outputs.lowercase }} | cut -d" " -f 3)
            yarn apollo service:push \
            --graph=$GRAPH \
            --variant=$VARIANT \
            --endpoint=$SERVICE_ENDPOINT \
            --serviceName=$PROJECT_NAME \
            --serviceURL=$SERVICE_ENDPOINT \
            --key=${{ secrets.APOLLO_KEY }}
          fi
